services:
  postgres:
    image: postgres:alpine
    env_file: apps/backend/.env
    container_name: job-board-postgres
    environment:
      POSTGRES_DB: ${PG_DB:-jobboard}
      POSTGRES_USER: ${PG_USER:-jobboard_user}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-jobboard_password}
    ports:
      - '${PG_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U $${PG_USER:-jobboard_user} -d $${PG_DB:-jobboard}',
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: job-board-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    sysctls:
      - net.core.somaxconn=1024

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    restart: unless-stopped
    env_file: apps/backend/.env
    user: '${UID:-1000}:${GID:-1000}'
    container_name: job-board-backend
    environment:
      - NODE_ENV=development
      - BUN_INSTALL_CACHE=/app/.bun-cache
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    volumes:
      - ./apps/backend/src:/app/apps/backend/src:rw
      - ./apps/backend/drizzle.config.ts:/app/apps/backend/drizzle.config.ts:ro
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    restart: unless-stopped
    env_file: apps/frontend/.env
    user: '${UID:-1000}:${GID:-1000}'
    container_name: job-board-frontend
    ports:
      - '${PORT:-5173}:${PORT:-5173}'
    volumes:
      - ./apps/frontend/src:/app/apps/frontend/src
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - BUN_INSTALL_CACHE=/app/.bun-cache
    depends_on:
      - backend

volumes:
  backend_node_modules:
  frontend_node_modules:
  postgres_data:
    driver: local
  redis_data:
    driver: local
